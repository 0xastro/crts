/// This scenario creates the most basic two node CR network. No actual
/// cognitive/adaptive behavior is defined by the cognitive engines in
/// this scenario, it is intended as the most basic example for a user
/// to become familiar with CRTS.

// general scenario parameters
num_nodes = 2;
run_time = 15.0;

// Node 1
node1: {
    // general node parameters
    type = "CR";
    cr_type = "python";
    CORNET_IP = "192.168.1.55";

    // virtual network parameters
    CRTS_IP = "10.0.0.2";
    TARGET_IP = "10.0.0.3";
    
    // cognitive engine parameters
    python_file = "python_txrx.py";
    arguments = [
    "--rx-server-address=192.168.1.56",
    "--tx-server-address=192.168.1.55",
    "--rx-server-port=52002",
    "--tx-server-port=52001"
    ]

    ce_timeout_ms = 200.0;
    
    log_net_rx = 1;
    net_rx_log_file = "python_N1_NET_RX";    
    generate_octave_logs = 1; 
};

node2: {
    // general node parameters
    type = "CR";
    cr_type = "python";
    CORNET_IP = "192.168.1.56";

    // virtual network parameters
    CRTS_IP = "10.0.0.3";
    TARGET_IP = "10.0.0.2";
    
    // cognitive engine parameters
    python_file = "python_txrx.py";
    arguments = [
    "--rx-server-address=192.168.1.55",
    "--tx-server-address=192.168.1.56",
    "--rx-server-port=52001",
    "--tx-server-port=52002"
    ]
    ce_timeout_ms = 200.0;
    
    log_net_rx = 1;
    net_rx_log_file = "python_N2_NET_RX";    
    generate_octave_logs = 1; 
    
};










