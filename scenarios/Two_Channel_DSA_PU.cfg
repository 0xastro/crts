/// This simple DSA scenario assumes that there are two radios considered primary
/// users (PU) and two cognitive seconday user (SU) radios. There are two adjacent 
/// and equal bandwidth channels (per link) that the cognitive radios are permitted 
/// to use. The PU's will switch their operating frequency as defined in their
/// "cognitive engines," making it necessary for the SU CR's to dynamically switch
/// their operating frequency to realize good performance and to avoid significantly
/// disrupting the PU links.

// General parameters
num_nodes = 4;
run_time = 30.0;

// Node 1
node1: {
    // general node parameters
    type = "CR";
    cr_type = "ecr";
    CORNET_IP = "192.168.1.12";
    
    // virtual network parameters
    CRTS_IP = "10.0.0.2";
    TARGET_IP = "10.0.0.3";
    
    // cognitive engine parameters
    CE = "CE_Two_Channel_DSA_PU";
    ce_timeout_ms = 0.0;
    
    // log/print settings
    print_metrics = 0;
    log_phy_rx = 1;
	log_phy_tx = 1;
	log_net_rx = 1;
	phy_rx_log_file = "Two_Channel_DSA_PU_N1_PHY_RX";
	phy_tx_log_file = "Two_Channel_DSA_PU_N1_PHY_TX";
	net_rx_log_file = "Two_Channel_DSA_PU_N1_NET_RX";
	generate_octave_logs = 1;
    generate_python_logs = 0;

    // initial USRP settings
    tx_freq = 870e6;
    tx_rate = 1e6;
    tx_gain = 25.0;
    rx_freq = 770e6;
    rx_rate = 1e6;
    rx_gain = 20.0;

	//tx_subcarriers = 32;
	//rx_subcarriers = 32;
};

// Node 2
node2: {
    // general node parameters
    type = "CR";
    cr_type = "ecr";
    CORNET_IP = "192.168.1.13";

    // virtual network parameters
    CRTS_IP = "10.0.0.3";
    TARGET_IP = "10.0.0.2";

    // cognitive engine parameters
    CE = "CE_Two_Channel_DSA_PU";
    ce_timeout_ms = 0.0;
    
    // log/print settings
    print_metrics = 1;
    log_phy_rx = 1;
	log_phy_tx = 1;
	log_net_rx = 1;
	phy_rx_log_file = "Two_Channel_DSA_PU_N2_PHY_RX";
	phy_tx_log_file = "Two_Channel_DSA_PU_N2_PHY_TX";
	net_rx_log_file = "Two_Channel_DSA_PU_N2_NET_RX";
	generate_octave_logs = 1;
    generate_python_logs = 0;
    
    // initial USRP settings
    tx_freq = 770e6;
    tx_rate = 1e6;
    tx_gain = 25.0;
    rx_freq = 870e6;
    rx_rate = 1e6;
    rx_gain = 20.0;

	//tx_subcarriers = 32;
	//rx_subcarriers = 32;
};

// Node 3
node3: {
    // general node parameters
    type = "CR";
    cr_type = "ecr";
    CORNET_IP = "192.168.1.15";
    
    // virtual network parameters
    CRTS_IP = "10.0.0.4";
    TARGET_IP = "10.0.0.5";

    // cognitive engine parameters
    CE = "CE_Two_Channel_DSA_Spectrum_Sensing";
    ce_timeout_ms = 80.0;
    
    // log/print settings
    print_metrics = 1;
    log_phy_rx = 1;
	log_phy_tx = 1;
	log_net_rx = 1;
	phy_rx_log_file = "Two_Channel_DSA_PU_N3_PHY_RX";
	phy_tx_log_file = "Two_Channel_DSA_PU_N3_PHY_TX";
	net_rx_log_file = "Two_Channel_DSA_PU_N3_NET_RX";
	generate_octave_logs = 1;
    generate_python_logs = 0;
    
    // initial USRP settings
    tx_freq = 870e6;
    tx_rate = 1e6;
    tx_gain = 14.0;
    rx_freq = 770e6;
    rx_rate = 1e6;
    rx_gain = 20.0;
};

// Node 4
node4: {
    // general node parameters
    type = "CR";
    cr_type = "ecr";
    CORNET_IP = "192.168.1.16";

    // virtual network parameters
    CRTS_IP = "10.0.0.5";
    TARGET_IP = "10.0.0.4";
    
    // cognitive engine parameters
    CE = "CE_Two_Channel_DSA_Spectrum_Sensing";
    ce_timeout_ms = 80.0;
    
    // log/print settings
    print_metrics = 0;
    log_phy_rx = 1;
	log_phy_tx = 1;
	log_net_rx = 1;
	phy_rx_log_file = "Two_Channel_DSA_PU_N4_PHY_RX";
	phy_tx_log_file = "Two_Channel_DSA_PU_N4_PHY_TX";
	net_rx_log_file = "Two_Channel_DSA_PU_N4_NET_RX";
	generate_octave_logs = 1;
    generate_python_logs = 0;
    
    // initial USRP settings
    tx_freq = 770e6;
    tx_rate = 1e6;
    tx_gain = 14.0;
    rx_freq = 870e6;
    rx_rate = 1e6;
    rx_gain = 20.0;
};


