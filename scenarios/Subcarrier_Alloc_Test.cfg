/// This scenario creates the most basic two node CR network. No actual
/// cognitive/adaptive behavior is defined by the cognitive engines in
/// this scenario, it is intended as the most basic example for a user
/// to become familiar with CRTS.

// general scenario parameters
num_nodes = 1;
run_time = 60.0;

// Node 1
node1: {
    // general node parameters
    type = "CR";
    cr_type = "ecr";
    CORNET_IP = "192.168.1.18";

    // virtual network parameters
    //CRTS_IP = "10.0.0.2";
    //TARGET_IP = "10.0.0.3";
    
    // cognitive engine parameters
    CE = "CE_Subcarrier_Alloc";
    ce_timeout_ms = 200.0;
    
    // log/report settings
    //print_metrics = 1;
    //log_phy_rx = 1;
	//log_phy_tx = 1;
	//log_net_rx = 1;
	//phy_rx_log_file = "Two_Node_FDD_Network_N1_PHY_RX";
	//phy_tx_log_file = "Two_Node_FDD_Network_N1_PHY_TX";
	//net_rx_log_file = "Two_Node_FDD_Network_N1_NET_RX";
	//generate_octave_logs = 1;
    //generate_python_logs = 0;
    
	// initial USRP settings
	rx_freq = 870e6;
    rx_rate = 1e6;
    rx_gain = 20.0;
    tx_freq = 770e6;
    tx_rate = 1e6;
    tx_gain = 20.0;
    
    // initial liquid OFDM settings
    duplex = "FDD";
    tx_gain_soft = -12.0;
    tx_modulation = "bpsk";
    tx_crc = "crc32";
    tx_fec0 = "v29";
    tx_fec1 = "none";
    tx_delay_us = 1e4;
	tx_subcarriers = 32;
};

