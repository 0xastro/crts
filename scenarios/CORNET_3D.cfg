/// This scenario creates the most basic two node CR network. No actual
/// cognitive/adaptive behavior is defined by the cognitive engines in
/// this scenario, it is intended as the most basic example for a user
/// to become familiar with CRTS.
// general scenario parameters
num_nodes = 2;
run_time = 300.0;
// Node 1
node1: {
    // general node parameters
    type = "CR";
    cr_type = "ecr";
    CORNET_IP = "192.168.1.47";
    // virtual network parameters
    CRTS_IP = "10.0.0.2";
    TARGET_IP = "10.0.0.3";
    
    // cognitive engine parameters
    CE = "CE_CORNET3Dtx";
    ce_timeout_ms = 500.0;
    
    // log/report settings
    print_metrics = 0;
    log_phy_rx = 1;
	log_phy_tx = 1;
	log_net_rx = 1;
	phy_rx_log_file = "Two_Node_FDD_Network_N1_PHY_RX";
	phy_tx_log_file = "Two_Node_FDD_Network_N1_PHY_TX";
	net_rx_log_file = "Two_Node_FDD_Network_N1_NET_RX";
	generate_octave_logs = 1;
    generate_python_logs = 0;
    
	// initial USRP settings
	rx_freq = 762e6;
    rx_rate = 1e6;
    rx_gain = 20.0;
    tx_freq = 770e6;
    tx_rate = 1e6;
    tx_gain = 20.0;
    
    // initial liquid OFDM settings
    duplex = "FDD";
    tx_gain_soft = -12.0;
    tx_modulation = "qpsk";
    tx_crc = "crc32";
    tx_fec0 = "v29";
    tx_fec1 = "none";
    tx_delay_us = 1e3;
	tx_subcarriers = 32;
	tx_subcarrier_alloc_method = "default";
	tx_guard_subcarriers = 4;
	tx_central_nulls = 6;
	tx_pilot_freq = 4;
	rx_subcarriers = 32;
	rx_subcarrier_alloc_method = "default";
	rx_guard_subcarriers = 4;
	rx_central_nulls = 6;
	rx_pilot_freq = 4;
};
// Node 2
node2: {
    // general node parameters
    type = "CR";
    cr_type = "ecr";
    CORNET_IP = "192.168.1.48";
    // virtual network parameters
    CRTS_IP = "10.0.0.3";
    TARGET_IP = "10.0.0.2";
    
	// cognitive engine parameters
    CE = "CE_CORNET3Drx";
    ce_timeout_ms = 200000.0;
    
    // log/report settings
    print_metrics = 1;
    log_phy_rx = 1;
	log_phy_tx = 1;
	log_net_rx = 1;
	phy_rx_log_file = "Two_Node_FDD_Network_N2_PHY_RX";
	phy_tx_log_file = "Two_Node_FDD_Network_N2_PHY_TX";
	net_rx_log_file = "Two_Node_FDD_Network_N2_NET_RX";
	generate_octave_logs = 1;
    generate_python_logs = 0;
    
    // initial USRP settings
    rx_freq = 770e6;
    rx_rate = 1e6;
    rx_gain = 20.0; 
	tx_freq = 762e6;
    tx_rate = 1e6;
    tx_gain = 20.0;
    
	// initial liquid OFDM settings
    duplex = "FDD";
    tx_gain_soft = -12.0;
    tx_modulation = "qpsk";
    tx_crc = "crc32";
    tx_fec0 = "v29";
    tx_fec1 = "none";
    tx_delay_us = 1e3;
	tx_subcarriers = 32;
	tx_subcarrier_alloc_method = "default";
	tx_guard_subcarriers = 4;
	tx_central_nulls = 6;
	tx_pilot_freq = 4;
	rx_subcarriers = 32;
	rx_subcarrier_alloc_method = "default";
	rx_guard_subcarriers = 4;
	rx_central_nulls = 6;
	rx_pilot_freq = 4;
};
